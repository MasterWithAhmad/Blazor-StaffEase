@page "/leaverequests/delete"
@using Microsoft.EntityFrameworkCore
@using StaffEase.Models
@inject IDbContextFactory<StaffEase.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>LeaveRequest</h2>
    <hr />
    @if (leaverequest is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">EmployeeId</dt>
            <dd class="col-sm-10">@leaverequest.EmployeeId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">StartDate</dt>
            <dd class="col-sm-10">@leaverequest.StartDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">EndDate</dt>
            <dd class="col-sm-10">@leaverequest.EndDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Reason</dt>
            <dd class="col-sm-10">@leaverequest.Reason</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@leaverequest.Status</dd>
        </dl>
        <EditForm method="post" Model="leaverequest" OnValidSubmit="DeleteLeaveRequest" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(leaverequest is null)">Delete</button> |
            <a href="/leaverequests">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private LeaveRequest? leaverequest;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        leaverequest = await context.LeaveRequests.FirstOrDefaultAsync(m => m.Id == Id);

        if (leaverequest is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteLeaveRequest()
    {
        using var context = DbFactory.CreateDbContext();
        context.LeaveRequests.Remove(leaverequest!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/leaverequests");
    }
}
